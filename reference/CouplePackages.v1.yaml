openapi: 3.0.0
info:
  title: Couples Cloud API
  version: '2.0'
  description: Redesign of the endpoints for handling and serving requests from the mobile Apps / SDK.
servers:
  - url: 'http://localhost:3000'
    description: Localhost
  - url: 'https://dev-cloud.actionlist.de/dev/couplecloud'
    description: Development
  - url: 'https://test.actionlist.de/test/couplecloud'
    description: Staging
  - url: 'https://cloud.actionlist.de/prod/couplecloud'
    description: Production
paths:
  '/v1.0/collections/mobile?$bundleWith={bundleWith}&$keys={keys}$locale={locale}':
    get:
      summary: CouplePackages
      tags: []
      operationId: get-couple-packages
      description: API to get the list of all Couple Packages based on the Couples-Package.v1.json model with the page list as empty.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  title:
                    type: string
                  iconUrl:
                    type: string
                    format: uri
                  pages:
                    type: array
                    items: {}
              examples:
                example-1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    title: string
                    iconUrl: 'http://example.com'
                    pages:
                      - null
    parameters:
      - schema:
          type: string
        name: bundleWith
        in: path
        required: true
      - schema:
          type: string
        name: keys
        in: path
        required: true
      - schema:
          type: string
        name: locale
        in: path
        required: true
  '/couplepackages/{couple-package-key}?$locale=&$includeContent={includeContent}':
    get:
      summary: Couples by Couples Package Key
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        title:
                          type: string
                        pageIconUrl:
                          type: string
                          format: uri
                        contents:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                              title:
                                type: string
                              description:
                                type: string
                              contentType:
                                type: string
                              iconUrl:
                                type: string
                                format: uri
                              isBookmarkable:
                                type: boolean
                                format: binary
                              isDownloadable:
                                type: boolean
                                format: binary
                              isShareable:
                                format: binary
                                type: boolean
                              mediaUrl:
                                type: string
                                format: uri
                        contentTypeList:
                          type: array
                          uniqueItems: true
                          items:
                            type: string
              examples:
                example-1:
                  value:
                    pages:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        title: string
                        pageIconUrl: 'http://example.com'
                        contents:
                          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            title: string
                            description: string
                            contentType: string
                            iconUrl: 'http://example.com'
                            isBookmarkable: true
                            isDownloadable: true
                            isShareable: true
                            mediaUrl: 'http://example.com'
                        contentTypeList:
                          - string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      operationId: get-Couples-By-Couples-Package-Key
      parameters:
        - schema:
            type: string
          in: query
          description: A locale key to identify the language in which the content should be returned. If not given or no matching content can be found the data for the couple packages default language will be served.
          name: locale
          allowEmptyValue: true
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: includeContent
          description: 'If given, indicates if the result should include subcontent for the couplepackages it returns, such as couplepages and couplecontent. This function is costly and should only be used where all such data is required.'
          allowEmptyValue: true
      description: ''
    parameters:
      - schema:
          type: string
        name: couple-package-key
        in: path
        description: key of a certain couple package. If given the response will only return data for the object identified by the key.
      - schema:
          type: string
        name: includeContent
        in: path
        required: true
components:
  schemas: {}
  securitySchemes: {}
